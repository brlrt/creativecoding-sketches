/**
 * @file
 * This composition does...
 *
 * @copyright Copyright Â© 2017 [marcin](https://vuo.org/user/914607)
 * @see This is a Vuo Composition source code file.  See http://vuo.org for further information.
 */

digraph G
{
Add2 [type="vuo.math.add.VuoReal" version="2.0.0" label="Add|<refresh>refresh\l|<values>values\l|<sum>sum\r" pos="675,630"];
Add3 [type="vuo.math.add.VuoReal" version="2.0.0" label="Add|<refresh>refresh\l|<values>values\l|<sum>sum\r" pos="735,1080"];
AddToList2 [type="vuo.list.add.VuoPoint3d" version="1.0.0" label="Add to List|<refresh>refresh\l|<list>list\l|<position>position\l|<item>item\l|<modifiedList>modifiedList\r" pos="2205,-165" _position="\"end\""];
BuildList4 [type="vuo.list.build.VuoPoint3d" version="1.0.1" label="Build List|<refresh>refresh\l|<fire>fire\l|<builtItem>builtItem\l|<builtList>builtList\r|<buildItem>buildItem\r" pos="435,420" fillcolor="violet" _builtList_eventThrottling="enqueue" _buildItem_eventThrottling="enqueue"];
Calculate [type="vuo.math.calculate" version="1.0.0" label="Equal|<refresh>refresh\l|<expression>expression\l|<values>values\l|<result>result\r" pos="675,540" _expression="{\"expressions\":[\"A == B\"],\"inputVariables\":[\"A\",\"B\"],\"outputVariables\":[\"result\"]}"];
Convert3DPointToReal [type="vuo.type.point3d.real.y" version="1.0.0" label="Convert 3D Point to Real|<refresh>refresh\l|<xyz>xyz\l|<y>y\r" pos="975,750"];
Convert3DPointToReal2 [type="vuo.type.point3d.real.x" version="1.0.1" label="Convert 3D Point to Real|<refresh>refresh\l|<xyz>xyz\l|<x>x\r" pos="975,855"];
Convert3DPointToReal3 [type="vuo.type.point3d.real.x" version="1.0.1" label="Convert 3D Point to Real|<refresh>refresh\l|<xyz>xyz\l|<x>x\r" pos="705,690"];
Convert3DPointToReal4 [type="vuo.type.point3d.real.y" version="1.0.0" label="Convert 3D Point to Real|<refresh>refresh\l|<xyz>xyz\l|<y>y\r" pos="735,1095"];
Convert3DPointToReal5 [type="vuo.type.point3d.real.x" version="1.0.1" label="Convert 3D Point to Real|<refresh>refresh\l|<xyz>xyz\l|<x>x\r" pos="1590,195"];
Convert3DPointToReal6 [type="vuo.type.point3d.real.y" version="1.0.0" label="Convert 3D Point to Real|<refresh>refresh\l|<xyz>xyz\l|<y>y\r" pos="1590,210"];
Convert3DPointToReal7 [type="vuo.type.point3d.real.y" version="1.0.0" label="Convert 3D Point to Real|<refresh>refresh\l|<xyz>xyz\l|<y>y\r" pos="1590,315"];
Convert3DPointToReal8 [type="vuo.type.point3d.real.x" version="1.0.1" label="Convert 3D Point to Real|<refresh>refresh\l|<xyz>xyz\l|<x>x\r" pos="1590,300"];
ConvertIntegerToRealNumber [type="vuo.type.integer.real" version="1.0.0" label="Convert Integer to Real Number|<refresh>refresh\l|<integer>integer\l|<real>real\r" pos="1215,465"];
CountItemsInList [type="vuo.list.count.VuoPoint3d" version="1.0.0" label="Count Items in List|<refresh>refresh\l|<list>list\l|<itemCount>itemCount\r" pos="1380,270"];
CountItemsInList3 [type="vuo.list.count.VuoPoint3d" version="1.0.0" label="Count Items in List|<refresh>refresh\l|<list>list\l|<itemCount>itemCount\r" pos="1245,180"];
CycleThroughList [type="vuo.list.cycle.VuoGenericType1" version="1.1.0" label="Cycle through List|<refresh>refresh\l|<list>list\l|<goForward>goForward\l|<goBackward>goBackward\l|<goToFirst>goToFirst\l|<wrapMode>wrapMode\l|<item>item\r|<position>position\r" pos="1200,510" _wrapMode="\"wrap\""];
DistanceFromSTLPoint [type="vuo.point.distance.VuoPoint3d" version="1.0.0" label="Distance from STL Point|<refresh>refresh\l|<a>a\l|<b>b\l|<distance>distance\r" pos="1980,0"];
DistanceFromSTLPoint2 [type="vuo.point.distance.VuoPoint3d" version="1.0.0" label="Distance from STL Point|<refresh>refresh\l|<a>a\l|<b>b\l|<distance>distance\r" pos="1980,120"];
Equal2 [type="vuo.math.calculate" version="1.0.0" label="Equal|<refresh>refresh\l|<expression>expression\l|<values>values\l|<result>result\r" pos="675,960" _expression="{\"expressions\":[\"A == B\"],\"inputVariables\":[\"A\",\"B\"],\"outputVariables\":[\"result\"]}"];
FireOnStart [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<started>started\r" pos="-510,360" fillcolor="yellow" _started_eventThrottling="enqueue"];
GetItemFromList3 [type="vuo.list.get.VuoPoint3d" version="1.0.1" label="First Point|<refresh>refresh\l|<list>list\l|<which>which\l|<item>item\r" pos="1515,-15" _which="1"];
HoldValue13 [type="vuo.data.hold.VuoPoint3d" version="2.0.0" label="Hold Value|<refresh>refresh\l|<initialValue>initialValue\l|<newValue>newValue\l|<heldValue>heldValue\r" pos="555,810"];
IsGreaterThan2 [type="vuo.data.isGreaterThan.VuoReal" version="1.0.0" label="Is Greater Than|<refresh>refresh\l|<a>a\l|<b>b\l|<greaterThan>greaterThan\r" pos="2205,45"];
IsRealNonzero [type="vuo.type.real.boolean" version="1.0.0" label="Is Real Nonzero|<refresh>refresh\l|<real>real\l|<boolean>boolean\r" pos="945,645"];
IsRealNonzero2 [type="vuo.type.real.boolean" version="1.0.0" label="Is Real Nonzero|<refresh>refresh\l|<real>real\l|<boolean>boolean\r" pos="1020,1035"];
LastPoint3 [type="vuo.list.get.VuoPoint3d" version="1.0.1" label="Last Point|<refresh>refresh\l|<list>list\l|<which>which\l|<item>item\r" pos="1515,75"];
LastPoint4 [type="vuo.list.get.VuoPoint3d" version="1.0.1" label="Second to Last Point|<refresh>refresh\l|<list>list\l|<which>which\l|<item>item\r" pos="1470,180"];
Make3DPoint [type="vuo.point.make.VuoPoint3d" version="2.0.0" label="First Point|<refresh>refresh\l|<x>x\l|<y>y\l|<z>z\l|<point>point\r" pos="285,885" _z="0.0"];
Make3DPoint2 [type="vuo.point.make.VuoPoint3d" version="2.0.0" label="Make 3D Point|<refresh>refresh\l|<x>x\l|<y>y\l|<z>z\l|<point>point\r" pos="1755,0" _z="0.5"];
Make3DPoint3 [type="vuo.point.make.VuoPoint3d" version="2.0.0" label="Make 3D Point|<refresh>refresh\l|<x>x\l|<y>y\l|<z>z\l|<point>point\r" pos="1080,645" _z="0.5"];
Make3DPoint4 [type="vuo.point.make.VuoPoint3d" version="2.0.0" label="Make 3D Point|<refresh>refresh\l|<x>x\l|<y>y\l|<z>z\l|<point>point\r" pos="1755,105" _z="0.5"];
Make3DPoint5 [type="vuo.point.make.VuoPoint3d" version="2.0.0" label="Make 3D Point|<refresh>refresh\l|<x>x\l|<y>y\l|<z>z\l|<point>point\r" pos="1110,900" _z="0.5"];
MakeDictionary [type="vuo.dictionary.make.VuoText.VuoReal" version="1.0.0" label="Make Dictionary|<refresh>refresh\l|<keys>keys\l|<values>values\l|<dictionary>dictionary\r" pos="120,480"];
MakeDictionary2 [type="vuo.dictionary.make.VuoText.VuoReal" version="1.0.0" label="Make Dictionary|<refresh>refresh\l|<keys>keys\l|<values>values\l|<dictionary>dictionary\r" pos="270,675"];
MakeDictionary3 [type="vuo.dictionary.make.VuoText.VuoReal" version="1.0.0" label="Make Dictionary|<refresh>refresh\l|<keys>keys\l|<values>values\l|<dictionary>dictionary\r" pos="450,1005"];
MakeDictionary4 [type="vuo.dictionary.make.VuoText.VuoReal" version="1.0.0" label="Make Dictionary|<refresh>refresh\l|<keys>keys\l|<values>values\l|<dictionary>dictionary\r" pos="60,855"];
MakeDictionary5 [type="vuo.dictionary.make.VuoText.VuoReal" version="1.0.0" label="Make Dictionary|<refresh>refresh\l|<keys>keys\l|<values>values\l|<dictionary>dictionary\r" pos="60,930"];
MakeList10 [type="vuo.list.make.2.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="689,1091" _2="2"];
MakeList11 [type="vuo.list.make.2.VuoText" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="450,1005" _1="\"A\"" _2="\"B\""];
MakeList12 [type="vuo.list.make.2.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="628,986"];
MakeList13 [type="vuo.list.make.1.VuoText" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="60,855" _1="\"A\""];
MakeList14 [type="vuo.list.make.1.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="-2,881" fillcolor="blue"];
MakeList15 [type="vuo.list.make.1.VuoText" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="60,930" _1="\"A\""];
MakeList16 [type="vuo.list.make.1.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="-2,971" fillcolor="blue"];
MakeList19 [type="vuo.list.make.1.VuoText" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="270,675" _1="\"A\""];
MakeList20 [type="vuo.list.make.1.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="223,686" fillcolor="blue"];
MakeList21 [type="vuo.list.make.2.VuoGenericType1" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="1130,521"];
MakeList6 [type="vuo.list.make.2.VuoText" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="120,480" _1="\"A\"" _2="\"B\""];
MakeList7 [type="vuo.list.make.2.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="628,566"];
MakeList9 [type="vuo.list.make.2.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="629,641" _2="2"];
MakeRandomValue2 [type="vuo.noise.random.VuoReal" version="1.0.0" label="Make Random Value|<refresh>refresh\l|<minimum>minimum\l|<maximum>maximum\l|<value>value\r" pos="-210,870" fillcolor="blue"];
MakeRandomValue3 [type="vuo.noise.random.VuoReal" version="1.0.0" label="Make Random Value|<refresh>refresh\l|<minimum>minimum\l|<maximum>maximum\l|<value>value\r" pos="-210,960" fillcolor="blue"];
MakeRandomValue5 [type="vuo.noise.random.VuoReal" version="1.0.0" label="Make Random Value|<refresh>refresh\l|<minimum>minimum\l|<maximum>maximum\l|<value>value\r" pos="30,660" fillcolor="blue"];
Round [type="vuo.math.round" version="2.0.0" label="Round|<refresh>refresh\l|<real>real\l|<rounded>rounded\r" pos="1365,390"];
RoundAndMakeOdd2 [type="vuo.math.calculate" version="1.0.0" label="Round and make Odd|<refresh>refresh\l|<expression>expression\l|<values>values\l|<result>result\r" pos="270,660" fillcolor="blue" _expression="{\"expressions\":[\"round(A) % 2 == 0 ? round(A+1) : round(A)\"],\"inputVariables\":[\"A\"],\"outputVariables\":[\"result\"]}"];
RoundAndMakeOdd3 [type="vuo.math.calculate" version="1.0.0" label="Round and make Odd|<refresh>refresh\l|<expression>expression\l|<values>values\l|<result>result\r" pos="45,855" fillcolor="blue" _expression="{\"expressions\":[\"round(A) % 2 == 0 ? round(A+1) : round(A)\"],\"inputVariables\":[\"A\"],\"outputVariables\":[\"result\"]}"];
RoundAndMakeOdd4 [type="vuo.math.calculate" version="1.0.0" label="Round and make Odd|<refresh>refresh\l|<expression>expression\l|<values>values\l|<result>result\r" pos="45,945" fillcolor="blue" _expression="{\"expressions\":[\"round(A) % 2 == 0 ? round(A+1) : round(A)\"],\"inputVariables\":[\"A\"],\"outputVariables\":[\"result\"]}"];
SelectInput10 [type="vuo.select.in.2.VuoPoint3d" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<option1>option1\l|<option2>option2\l|<out>out\r" pos="1425,660" fillcolor="magenta"];
SelectInput2 [type="vuo.select.in.boolean.VuoReal" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="900,555"];
SelectInput3 [type="vuo.select.in.boolean.VuoReal" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="900,945"];
SelectInput7 [type="vuo.select.in.boolean.VuoPoint3d" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="2445,60"];
ShareList2 [type="vuo.data.share.list.VuoPoint3d" version="1.0.0" label="Share List|<refresh>refresh\l|<value>value\l|<sameValue>sameValue\r" pos="1290,-60"];
Subtract [type="vuo.math.subtract.VuoReal" version="1.1.0" label="Subtract|<refresh>refresh\l|<a>a\l|<b>b\l|<difference>difference\r" pos="1290,240" _b="1"];
PublishedInputs [type="vuo.in" label="PublishedInputs|<Minimum>Minimum\r|<Maximum>Maximum\r|<Count>Count\r" _Minimum_type="VuoReal" _Minimum="-10" _Maximum_type="VuoReal" _Maximum="10" _Count_type="VuoInteger" _Count_suggestedMin="1" _Count="100" _Count_suggestedMax="1000" _Count_suggestedStep="1"];
PublishedOutputs [type="vuo.out" label="PublishedOutputs|<PointsList>PointsList\l" _PointsList_type="VuoList_VuoPoint3d"];

Add2:sum -> SelectInput2:trueOption;
Add3:sum -> SelectInput3:trueOption;
AddToList2:modifiedList -> PublishedOutputs:PointsList;
BuildList4:buildItem -> CycleThroughList:goForward;
BuildList4:buildItem -> HoldValue13:refresh;
BuildList4:buildItem -> MakeRandomValue5:refresh;
BuildList4:builtList -> ShareList2:value;
Calculate:result -> IsRealNonzero:real;
Convert3DPointToReal2:x -> Make3DPoint5:x;
Convert3DPointToReal3:x -> MakeList7:2;
Convert3DPointToReal4:y -> MakeList12:2;
Convert3DPointToReal5:x -> Make3DPoint2:x;
Convert3DPointToReal6:y -> Make3DPoint2:y;
Convert3DPointToReal7:y -> Make3DPoint4:y;
Convert3DPointToReal8:x -> Make3DPoint4:x;
Convert3DPointToReal:y -> Make3DPoint3:y;
ConvertIntegerToRealNumber:real -> Subtract:a;
CountItemsInList3:itemCount -> ConvertIntegerToRealNumber:integer;
CountItemsInList:itemCount -> LastPoint3:which;
CycleThroughList:position -> SelectInput10:which;
DistanceFromSTLPoint2:distance -> IsGreaterThan2:b;
DistanceFromSTLPoint:distance -> IsGreaterThan2:a;
Equal2:result -> IsRealNonzero2:real;
FireOnStart:started -> BuildList4:refresh;
FireOnStart:started -> MakeRandomValue2:refresh;
FireOnStart:started -> MakeRandomValue3:refresh;
GetItemFromList3:item -> Convert3DPointToReal5:xyz;
GetItemFromList3:item -> Convert3DPointToReal7:xyz;
HoldValue13:heldValue -> Convert3DPointToReal2:xyz;
HoldValue13:heldValue -> Convert3DPointToReal3:xyz;
HoldValue13:heldValue -> Convert3DPointToReal4:xyz;
HoldValue13:heldValue -> Convert3DPointToReal:xyz;
IsGreaterThan2:greaterThan -> SelectInput7:which;
IsRealNonzero2:boolean -> SelectInput3:which;
IsRealNonzero:boolean -> SelectInput2:which;
LastPoint3:item -> Convert3DPointToReal6:xyz;
LastPoint3:item -> Convert3DPointToReal8:xyz;
LastPoint4:item -> DistanceFromSTLPoint2:b;
LastPoint4:item -> DistanceFromSTLPoint:b;
Make3DPoint2:point -> DistanceFromSTLPoint:a;
Make3DPoint2:point -> SelectInput7:trueOption;
Make3DPoint3:point -> SelectInput10:option1;
Make3DPoint4:point -> DistanceFromSTLPoint2:a;
Make3DPoint4:point -> SelectInput7:falseOption;
Make3DPoint5:point -> SelectInput10:option2;
Make3DPoint:point -> HoldValue13:initialValue;
MakeDictionary2:dictionary -> RoundAndMakeOdd2:values;
MakeDictionary3:dictionary -> Equal2:values;
MakeDictionary4:dictionary -> RoundAndMakeOdd3:values;
MakeDictionary5:dictionary -> RoundAndMakeOdd4:values;
MakeDictionary:dictionary -> Calculate:values;
MakeList10:list -> Add3:values;
MakeList11:list -> MakeDictionary3:keys;
MakeList12:list -> MakeDictionary3:values;
MakeList13:list -> MakeDictionary4:keys;
MakeList14:list -> MakeDictionary4:values;
MakeList15:list -> MakeDictionary5:keys;
MakeList16:list -> MakeDictionary5:values;
MakeList19:list -> MakeDictionary2:keys;
MakeList20:list -> MakeDictionary2:values;
MakeList21:list -> CycleThroughList:list;
MakeList6:list -> MakeDictionary:keys;
MakeList7:list -> MakeDictionary:values;
MakeList9:list -> Add2:values;
MakeRandomValue2:value -> MakeList14:1;
MakeRandomValue3:value -> MakeList16:1;
MakeRandomValue5:value -> MakeList20:1;
PublishedInputs:Count -> BuildList4:fire;
PublishedInputs:Maximum -> MakeRandomValue2:maximum;
PublishedInputs:Maximum -> MakeRandomValue3:maximum;
PublishedInputs:Maximum -> MakeRandomValue5:maximum;
PublishedInputs:Minimum -> MakeRandomValue2:minimum;
PublishedInputs:Minimum -> MakeRandomValue3:minimum;
PublishedInputs:Minimum -> MakeRandomValue5:minimum;
Round:rounded -> LastPoint4:which;
RoundAndMakeOdd2:result -> MakeList10:1;
RoundAndMakeOdd2:result -> MakeList12:1;
RoundAndMakeOdd2:result -> MakeList7:1;
RoundAndMakeOdd2:result -> MakeList9:1;
RoundAndMakeOdd2:result -> SelectInput2:falseOption;
RoundAndMakeOdd2:result -> SelectInput3:falseOption;
RoundAndMakeOdd3:result -> Make3DPoint:x;
RoundAndMakeOdd4:result -> Make3DPoint:y;
SelectInput10:out -> BuildList4:builtItem;
SelectInput10:out -> HoldValue13:newValue;
SelectInput2:out -> Make3DPoint3:x;
SelectInput3:out -> Make3DPoint5:y;
SelectInput7:out -> AddToList2:item;
ShareList2:sameValue -> AddToList2:list;
ShareList2:sameValue -> CountItemsInList3:list;
ShareList2:sameValue -> CountItemsInList:list;
ShareList2:sameValue -> GetItemFromList3:list;
ShareList2:sameValue -> LastPoint3:list;
ShareList2:sameValue -> LastPoint4:list;
Subtract:difference -> Round:real;
}
